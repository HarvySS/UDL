{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { fuseAnimations } from '@fuse/animations';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/auth/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"@fuse/components/alert/alert.component\";\nimport * as i9 from \"@angular/material/progress-spinner\";\nconst _c0 = [\"forgotPasswordNgForm\"];\n\nfunction AuthForgotPasswordComponent_fuse_alert_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fuse-alert\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"appearance\", \"outline\")(\"showIcon\", false)(\"type\", ctx_r0.alert.type)(\"@shake\", ctx_r0.alert.type === \"error\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.alert.message, \" \");\n  }\n}\n\nfunction AuthForgotPasswordComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email address is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthForgotPasswordComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthForgotPasswordComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Send reset link \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthForgotPasswordComponent_mat_progress_spinner_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 18);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 24)(\"mode\", \"indeterminate\");\n  }\n}\n\nconst _c1 = function () {\n  return [\"/sign-in\"];\n};\n\nexport let AuthForgotPasswordComponent = /*#__PURE__*/(() => {\n  class AuthForgotPasswordComponent {\n    /**\r\n     * Constructor\r\n     */\n    constructor(_authService, _formBuilder) {\n      this._authService = _authService;\n      this._formBuilder = _formBuilder;\n      this.alert = {\n        type: 'success',\n        message: ''\n      };\n      this.showAlert = false;\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\r\n     * On init\r\n     */\n\n\n    ngOnInit() {\n      // Create the form\n      this.forgotPasswordForm = this._formBuilder.group({\n        email: ['', [Validators.required, Validators.email]]\n      });\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\r\n     * Send the reset link\r\n     */\n\n\n    sendResetLink() {\n      // Return if the form is invalid\n      if (this.forgotPasswordForm.invalid) {\n        return;\n      } // Disable the form\n\n\n      this.forgotPasswordForm.disable(); // Hide the alert\n\n      this.showAlert = false; // Forgot password\n\n      this._authService.forgotPassword(this.forgotPasswordForm.value).pipe(finalize(() => {\n        // Re-enable the form\n        this.forgotPasswordForm.enable(); // Reset the form\n\n        this.forgotPasswordNgForm.resetForm(); // Show the alert\n\n        this.showAlert = true;\n      })).subscribe(response => {\n        // Set the alert\n        this.alert = {\n          type: 'success',\n          message: 'Password reset sent! You\\'ll receive an email if you are registered on our system.'\n        };\n      }, response => {\n        // Set the alert\n        this.alert = {\n          type: 'error',\n          message: 'Email does not found! Are you sure you are already a member?'\n        };\n      });\n    }\n\n  }\n\n  AuthForgotPasswordComponent.ɵfac = function AuthForgotPasswordComponent_Factory(t) {\n    return new (t || AuthForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  AuthForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthForgotPasswordComponent,\n    selectors: [[\"auth-forgot-password\"]],\n    viewQuery: function AuthForgotPasswordComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.forgotPasswordNgForm = _t.first);\n      }\n    },\n    decls: 26,\n    vars: 11,\n    consts: [[1, \"flex-auto\", \"sm:shadow\", \"md:shadow-none\"], [1, \"md:flex\", \"md:items-center\", \"md:justify-center\", \"w-full\", \"sm:w-auto\", \"md:h-160\"], [1, \"w-full\", \"max-w-80\", \"sm:w-80\", \"mx-auto\", \"smheight\"], [1, \"w-12\"], [\"src\", \"assets/icons/logo.png\", 2, \"width\", \"150px\", \"max-width\", \"150px\"], [1, \"mt-8\", \"text-4xl\", \"font-extrabold\", \"tracking-tight\", \"leading-tight\"], [1, \"mt-0.5\", \"font-medium\"], [\"class\", \"mt-8 -mb-4\", 3, \"appearance\", \"showIcon\", \"type\", 4, \"ngIf\"], [1, \"mt-8\", 3, \"formGroup\"], [\"forgotPasswordNgForm\", \"ngForm\"], [1, \"w-full\"], [\"id\", \"email\", \"matInput\", \"\", 3, \"formControlName\"], [4, \"ngIf\"], [\"mat-flat-button\", \"\", 1, \"fuse-mat-button-large\", \"w-full\", \"mt-3\", 3, \"color\", \"disabled\", \"click\"], [3, \"diameter\", \"mode\", 4, \"ngIf\"], [1, \"mt-8\", \"text-md\", \"font-medium\", \"text-secondary\"], [1, \"ml-1\", \"text-primary-500\", \"hover:underline\", 3, \"routerLink\"], [1, \"mt-8\", \"-mb-4\", 3, \"appearance\", \"showIcon\", \"type\"], [3, \"diameter\", \"mode\"]],\n    template: function AuthForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtext(6, \"Forgot password?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵtext(8, \"Fill the form to reset your password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, AuthForgotPasswordComponent_fuse_alert_9_Template, 2, 5, \"fuse-alert\", 7);\n        i0.ɵɵelementStart(10, \"form\", 8, 9);\n        i0.ɵɵelementStart(12, \"mat-form-field\", 10);\n        i0.ɵɵelementStart(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 11);\n        i0.ɵɵtemplate(16, AuthForgotPasswordComponent_mat_error_16_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵtemplate(17, AuthForgotPasswordComponent_mat_error_17_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function AuthForgotPasswordComponent_Template_button_click_18_listener() {\n          return ctx.sendResetLink();\n        });\n        i0.ɵɵtemplate(19, AuthForgotPasswordComponent_span_19_Template, 2, 0, \"span\", 12);\n        i0.ɵɵtemplate(20, AuthForgotPasswordComponent_mat_progress_spinner_20_Template, 1, 2, \"mat-progress-spinner\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 15);\n        i0.ɵɵelementStart(22, \"span\");\n        i0.ɵɵtext(23, \"Return to\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"a\", 16);\n        i0.ɵɵtext(25, \"sign in \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.showAlert);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControlName\", \"email\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.get(\"email\").hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.get(\"email\").hasError(\"email\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"color\", \"primary\")(\"disabled\", ctx.forgotPasswordForm.disabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.forgotPasswordForm.disabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.disabled);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c1));\n      }\n    },\n    directives: [i3.NgIf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i4.MatFormField, i4.MatLabel, i5.MatInput, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i6.MatButton, i7.RouterLinkWithHref, i8.FuseAlertComponent, i4.MatError, i9.MatProgressSpinner],\n    styles: [\"@media only screen and (max-width: 1000px){.smheight{margin-top:10%}}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: fuseAnimations\n    }\n  });\n  return AuthForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}