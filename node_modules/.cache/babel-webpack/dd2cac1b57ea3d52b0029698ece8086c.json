{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseValidators } from '@fuse/validators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/core/auth/auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@fuse/components/alert/alert.component\";\nimport * as i9 from \"@angular/material/icon\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nconst _c0 = [\"resetPasswordNgForm\"];\n\nfunction AuthResetPasswordComponent_fuse_alert_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"fuse-alert\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"appearance\", \"outline\")(\"showIcon\", false)(\"type\", ctx_r0.alert.type)(\"@shake\", ctx_r0.alert.type === \"error\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.alert.message, \" \");\n  }\n}\n\nfunction AuthResetPasswordComponent_mat_icon_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 23);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:eye\");\n  }\n}\n\nfunction AuthResetPasswordComponent_mat_icon_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 23);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:eye-off\");\n  }\n}\n\nfunction AuthResetPasswordComponent_mat_icon_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 23);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:eye\");\n  }\n}\n\nfunction AuthResetPasswordComponent_mat_icon_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-icon\", 23);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"svgIcon\", \"heroicons_solid:eye-off\");\n  }\n}\n\nfunction AuthResetPasswordComponent_mat_error_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password confirmation is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthResetPasswordComponent_mat_error_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Passwords must match \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthResetPasswordComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Reset your password \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthResetPasswordComponent_mat_progress_spinner_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 24);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 24)(\"mode\", \"indeterminate\");\n  }\n}\n\nconst _c1 = function () {\n  return [\"/sign-in\"];\n};\n\nexport let AuthResetPasswordComponent = /*#__PURE__*/(() => {\n  class AuthResetPasswordComponent {\n    /**\r\n     * Constructor\r\n     */\n    constructor(_authService, _formBuilder, _route) {\n      this._authService = _authService;\n      this._formBuilder = _formBuilder;\n      this._route = _route;\n      this.alert = {\n        type: 'success',\n        message: ''\n      };\n      this.showAlert = false; // -----------------------------------------------------------------------------------------------------\n      // @ Lifecycle hooks\n      // -----------------------------------------------------------------------------------------------------\n\n      /**\r\n       * On init\r\n       */\n\n      this.token = '';\n    }\n\n    ngOnInit() {\n      this._route.snapshot.queryParams.token;\n\n      if (this._route.snapshot.queryParams && this._route.snapshot.queryParams.token) {\n        this.token = decodeURIComponent(this._route.snapshot.queryParams.token);\n      } //\n      // Create the form\n\n\n      this.resetPasswordForm = this._formBuilder.group({\n        password: ['', Validators.required],\n        passwordConfirm: ['', Validators.required]\n      }, {\n        validators: FuseValidators.mustMatch('password', 'passwordConfirm')\n      });\n    } // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\r\n     * Reset password\r\n     */\n\n\n    resetPassword() {\n      // Return if the form is invalid\n      if (this.resetPasswordForm.invalid) {\n        return;\n      } // Disable the form\n\n\n      this.resetPasswordForm.disable(); // Hide the alert\n\n      this.showAlert = false; // Send the request to the server\n\n      this._authService.resetPassword({\n        password: this.resetPasswordForm.get('password').value,\n        token: this.token\n      }).pipe(finalize(() => {\n        // Re-enable the form\n        this.resetPasswordForm.enable(); // Reset the form\n\n        this.resetPasswordNgForm.resetForm(); // Show the alert\n\n        this.showAlert = true;\n      })).subscribe(res => {\n        if (res.isSuccess) {\n          this.alert = {\n            type: 'success',\n            message: 'Your password has been reset.'\n          };\n        } else {\n          this.alert = {\n            type: 'error',\n            message: res.message\n          };\n        } // Set the alert\n\n      }, response => {\n        // Set the alert\n        this.alert = {\n          type: 'error',\n          message: 'Something went wrong, please try again.'\n        };\n      });\n    }\n\n  }\n\n  AuthResetPasswordComponent.ɵfac = function AuthResetPasswordComponent_Factory(t) {\n    return new (t || AuthResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  AuthResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthResetPasswordComponent,\n    selectors: [[\"auth-reset-password\"]],\n    viewQuery: function AuthResetPasswordComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.resetPasswordNgForm = _t.first);\n      }\n    },\n    decls: 40,\n    vars: 16,\n    consts: [[1, \"flex-auto\", \"sm:shadow\", \"md:shadow-none\"], [1, \"md:flex\", \"md:items-center\", \"md:justify-center\", \"w-full\", \"sm:w-auto\", \"mt-5\", \"md:h-160\"], [1, \"w-full\", \"max-w-80\", \"sm:w-80\", \"m\", \"mx-auto\", \"smheight\"], [1, \"w-12\"], [\"src\", \"assets/icons/logo.png\", 2, \"width\", \"150px\", \"max-width\", \"150px\"], [1, \"mt-8\", \"text-4xl\", \"font-extrabold\", \"tracking-tight\", \"leading-tight\"], [1, \"mt-0.5\", \"font-medium\"], [\"class\", \"mt-8 -mb-4\", 3, \"appearance\", \"showIcon\", \"type\", 4, \"ngIf\"], [1, \"mt-8\", 3, \"formGroup\"], [\"resetPasswordNgForm\", \"ngForm\"], [1, \"w-full\"], [\"id\", \"password\", \"matInput\", \"\", \"type\", \"password\", 3, \"formControlName\"], [\"passwordField\", \"\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"matSuffix\", \"\", 3, \"click\"], [\"class\", \"icon-size-5\", 3, \"svgIcon\", 4, \"ngIf\"], [\"id\", \"password-confirm\", \"matInput\", \"\", \"type\", \"password\", 3, \"formControlName\"], [\"passwordConfirmField\", \"\"], [4, \"ngIf\"], [\"mat-flat-button\", \"\", 1, \"fuse-mat-button-large\", \"w-full\", \"mt-3\", 3, \"color\", \"disabled\", \"click\"], [3, \"diameter\", \"mode\", 4, \"ngIf\"], [1, \"mt-8\", \"text-md\", \"font-medium\", \"text-secondary\"], [1, \"ml-1\", \"text-primary-500\", \"hover:underline\", 3, \"routerLink\"], [1, \"mt-8\", \"-mb-4\", 3, \"appearance\", \"showIcon\", \"type\"], [1, \"icon-size-5\", 3, \"svgIcon\"], [3, \"diameter\", \"mode\"]],\n    template: function AuthResetPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r12 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtext(6, \"Reset your password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵtext(8, \"Create a new password for your account\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, AuthResetPasswordComponent_fuse_alert_9_Template, 2, 5, \"fuse-alert\", 7);\n        i0.ɵɵelementStart(10, \"form\", 8, 9);\n        i0.ɵɵelementStart(12, \"mat-form-field\", 10);\n        i0.ɵɵelementStart(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 11, 12);\n        i0.ɵɵelementStart(17, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function AuthResetPasswordComponent_Template_button_click_17_listener() {\n          i0.ɵɵrestoreView(_r12);\n\n          const _r2 = i0.ɵɵreference(16);\n\n          return _r2.type === \"password\" ? _r2.type = \"text\" : _r2.type = \"password\";\n        });\n        i0.ɵɵtemplate(18, AuthResetPasswordComponent_mat_icon_18_Template, 1, 1, \"mat-icon\", 14);\n        i0.ɵɵtemplate(19, AuthResetPasswordComponent_mat_icon_19_Template, 1, 1, \"mat-icon\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-error\");\n        i0.ɵɵtext(21, \" Password is required \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-form-field\", 10);\n        i0.ɵɵelementStart(23, \"mat-label\");\n        i0.ɵɵtext(24, \"Password (Confirm)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 15, 16);\n        i0.ɵɵelementStart(27, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function AuthResetPasswordComponent_Template_button_click_27_listener() {\n          i0.ɵɵrestoreView(_r12);\n\n          const _r5 = i0.ɵɵreference(26);\n\n          return _r5.type === \"password\" ? _r5.type = \"text\" : _r5.type = \"password\";\n        });\n        i0.ɵɵtemplate(28, AuthResetPasswordComponent_mat_icon_28_Template, 1, 1, \"mat-icon\", 14);\n        i0.ɵɵtemplate(29, AuthResetPasswordComponent_mat_icon_29_Template, 1, 1, \"mat-icon\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(30, AuthResetPasswordComponent_mat_error_30_Template, 2, 0, \"mat-error\", 17);\n        i0.ɵɵtemplate(31, AuthResetPasswordComponent_mat_error_31_Template, 2, 0, \"mat-error\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function AuthResetPasswordComponent_Template_button_click_32_listener() {\n          return ctx.resetPassword();\n        });\n        i0.ɵɵtemplate(33, AuthResetPasswordComponent_span_33_Template, 2, 0, \"span\", 17);\n        i0.ɵɵtemplate(34, AuthResetPasswordComponent_mat_progress_spinner_34_Template, 1, 2, \"mat-progress-spinner\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 20);\n        i0.ɵɵelementStart(36, \"span\");\n        i0.ɵɵtext(37, \"Return to\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"a\", 21);\n        i0.ɵɵtext(39, \"sign in \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(16);\n\n        const _r5 = i0.ɵɵreference(26);\n\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.showAlert);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.resetPasswordForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControlName\", \"password\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", _r2.type === \"password\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r2.type === \"text\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formControlName\", \"passwordConfirm\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", _r5.type === \"password\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", _r5.type === \"text\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.resetPasswordForm.get(\"passwordConfirm\").hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.resetPasswordForm.get(\"passwordConfirm\").hasError(\"mustMatch\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"color\", \"primary\")(\"disabled\", ctx.resetPasswordForm.disabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.resetPasswordForm.disabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.resetPasswordForm.disabled);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(15, _c1));\n      }\n    },\n    directives: [i4.NgIf, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i5.MatFormField, i5.MatLabel, i6.MatInput, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i7.MatButton, i5.MatSuffix, i5.MatError, i3.RouterLinkWithHref, i8.FuseAlertComponent, i9.MatIcon, i10.MatProgressSpinner],\n    styles: [\"@media only screen and (max-width: 1000px){.smheight{margin-top:10%}}\\n\"],\n    encapsulation: 2,\n    data: {\n      animation: fuseAnimations\n    }\n  });\n  return AuthResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}